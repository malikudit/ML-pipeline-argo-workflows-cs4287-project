apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: ci-workflow-s3
  annotations:
    workflows.argoproj.io/description: >-
      A basic CI leveraging Argo Workflows.

      The workflow

      * pulls a repo from git. Specifically pulling a branch based on a pull request;
      * merges the target branch into it;
      * modifies the html that will be copied into the container to inject the unique name of the running workflow;
      * builds a container from a Dockerfile and pushes to a registry;
      * deploys an Argo CD application that uses the newly-built container to deploy a static website.

    workflows.argoproj.io/maintainer: "Udit Malik"
    workflows.argoproj.io/maintainer_url: "https://github.com/malikudit/argo-workflows-continuous-integration"
    workflows.argoproj.io/version: ">= 3.3.6"
spec:
  metrics:
    prometheus:
      - name: exec_duration_gauge
        labels:
          - key: name
            value: "ci-workflow"
          - key: type
            value: "pull-request"
          - key: status
            value: "{{status}}"
        help: "Duration gauge by name"
        gauge:
          value: "{{workflow.duration}}"
          realtime: false
      - name: result_counter
        help: "Count of step execution by result status"
        labels:
          - key: status
            value: Failed
          - key: name
            value: "ci-workflow"
          - key: type
            value: "pull-request"
        when: "{{status}} == Failed"
        counter:
          value: "1"
      - name: result_counter
        help: "Count of step execution by result status"
        labels:
          - key: status
            value: Succeeded
          - key: name
            value: "ci-workflow"
          - key: type
            value: "pull-request"
        when: "{{status}} == Succeeded"
        counter:
          value: "1"
  entrypoint: main
  parameters:
    - name: app_repo
      value: "argo-workflows-ci-example"
    - name: git_branch
      value: "example"
    - name: target_branch
      value: "main"
    - name: container_tag
      value: "stable"
    - name: container_image
      value: "k3d-registry.localhost:5000/hello-world"
    - name: dockerfile
      value: Dockerfile
    - name: path
      value: "/CI"
  templates:
    - name: main
      dag:
        tasks:
          - name: git-checkout-pr-s3
            templateRef:
              name: git-checkout-pr-s3
              template: git-checkout-pr
          - name: html-modifier-s3
            templateRef:
              name: html-modifier-s3
              template: html-modifier
            arguments:
              artifacts:
                - name: git_repo
                  from: "{{tasks.git-checkout-pr-s3.outputs.artifacts.git_repo}}"
            depends: git-checkout-pr-s3
          - name: container-build-s3
            templateRef:
              name: container-build-s3
              template: container-build
            arguments:
              artifacts:
                - name: modified_git_repo
                  from: "{{tasks.html-modifier-s3.outputs.artifacts.modified_git_repo}}"
            depends: html-modifier-s3
          - name: deploy-application
            templateRef:
              name: deploy-application
              template: main
            depends: container-build-s3
          - name: delete-application
            template: delete-application
            depends: (deploy-application.Failed)
    - name: delete-application
      resource:
        action: delete
        manifest: |
          apiVersion: argoproj.io/v1alpha1
          kind: Application
          metadata:
            name: final-application
            namespace: argocd
